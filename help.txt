## PREREQUESITES
0. Linux based OS system
1. Git
2. Docker
3. ssh-agent

# build dev docker image
docker build -t dev_image .
or
doit build_dev_env

# delete dev image
docker image rm dev_image
or
doit rm_dev_env

# run dev container
docker run --rm -it --security-opt seccomp=unconfined -v .:/workdir/messenger -v /var/run/docker.sock:/var/run/docker.sock dev_image
or
doit run_dev_env

# run and rebuild docker-compose
docker compose up -d --build

# shut down docker-compose containers
docker compose down

# compile with clang-tidy check
rm -rf *; cmake -DCLANG_TIDY_CHECK=1 -DCMAKE_TOOLCHAIN_FILE=../CMakeToolchain.cmake ..; cmake --build . -j 4
or
doit rebuild_project

# run clang-format
./tools/style-formatter.sh

# create Docker backend network
docker network create -d bridge messenger_backend --gateway 11.0.0.1 --subnet 11.0.0.0/2

# install PostgreSQL docker image
docker pull postgres:14-alpine3.20

# create backend network and install PostgreSQL image:
./tools/py3/setup_dev_env.py

# setup PostgreSQL docker container (inside dev_env)
doit setup_psql

# kill PostgreSQL container
doit shutdown_psql

# remove docker compose images
docker image rm $(docker images -f "reference=messenger*" -q)
